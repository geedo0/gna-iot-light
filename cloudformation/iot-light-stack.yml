Parameters:
  ClientId:
    Type: String
  TopicName:
    Type: String
  ButtonSerialNumber:
    Type: String
  FrontEndBucket:
    Type: String
  FrontEndCertificate:
    Type: String
  DnsName:
    Type: String
Resources:
  # Raspberry Pi with a light attached to it
  RaspberryPiLamp:
    Type: AWS::IoT::Thing
  LampSubscriberPolicy:
    Type: AWS::IoT::Policy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Action: iot:Connect
            Resource:
              Fn::Sub: arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:client/${ClientId}
          -
            Effect: Allow
            Action:
              - iot:Subscribe
            Resource:
              Fn::Sub: arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topicfilter/${TopicName}
          -
            Effect: Allow
            Action:
              - iot:Receive
            Resource:
              Fn::Sub: arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topic/${TopicName}

  # An IoT Button that can publish to the Pi's topic
  MqttRepublishRule:
    Type: AWS::IoT::TopicRule
    Properties:
      TopicRulePayload:
        RuleDisabled: false
        Sql:
          Fn::Sub: SELECT * FROM 'iotbutton/${ButtonSerialNumber}'
        Actions:
          -
            Republish:
              RoleArn:
                Fn::GetAtt:
                  - MqttRepublishRole
                  - Arn
              Topic:
                Ref: TopicName
  MqttRepublishRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - iot.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: iot-light-publisher
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Effect: Allow
                Action: iot:Publish
                Resource:
                  - Fn::Sub: arn:${AWS::Partition}:iot:${AWS::Region}:${AWS::AccountId}:topic/${TopicName}
  FrontEndDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - Ref: DnsName
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: false
          TargetOriginId: iot-assets
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        Origins:
          -
            DomainName:
              Fn::Sub: ${FrontEndBucket}.s3.amazonaws.com
            Id: iot-assets
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Sub: origin-access-identity/cloudfront/${FrontEndAccessIdentity}
        PriceClass: PriceClass_100
        ViewerCertificate:
          AcmCertificateArn: { Ref: FrontEndCertificate }
          SslSupportMethod: sni-only
  FrontEndAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Access to frontend assets.
  FrontEndBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: { Ref: FrontEndBucket }
      PolicyDocument:
        Version: '2008-10-17'
        Id: FrontEndBucketPolicy
        Statement:
          -
            Sid: 1
            Effect: Allow
            Principal:
              CanonicalUser:
                Fn::GetAtt:
                  - FrontEndAccessIdentity
                  - S3CanonicalUserId
            Action: s3:GetObject
            Resource:
              Fn::Sub: arn:aws:s3:::${FrontEndBucket}/*
